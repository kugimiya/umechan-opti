name: FRONT Build and deploy Docker image when code pushed to staging
run-name: FRONT Staging deploy triggered by ${{ github.actor }}
on:
  push:
    branches:
      - develop
jobs:
  build_docker_image:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Build docker image
        run: | 
          cd packages/frontend
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg NEXT_PUBLIC_PISSYKAKA_API=$FRONT_STAGING_NEXT_PUBLIC_PISSYKAKA_API \
            --build-arg NEXT_PUBLIC_EPDS_API=$FRONT_STAGING_NEXT_PUBLIC_EPDS_API \
            --build-arg NEXT_PUBLIC_DEFAULT_LIMIT=$FRONT_STAGING_NEXT_PUBLIC_DEFAULT_LIMIT \
            --build-arg NEXT_PUBLIC_FRONT_BASEURL=$FRONT_STAGING_NEXT_PUBLIC_FRONT_BASEURL \
            --build-arg NEXT_PUBLIC_PAGINATOR_MAX_ITEMS=$FRONT_STAGING_NEXT_PUBLIC_PAGINATOR_MAX_ITEMS \
            --build-arg NEXT_PUBLIC_CHAN_NAME=$FRONT_STAGING_NEXT_PUBLIC_CHAN_NAME \
            --build-arg NEXT_PUBLIC_FEATURE_FLAG_MODERKA=$FRONT_STAGING_NEXT_PUBLIC_FEATURE_FLAG_MODERKA \
            -t chan_frontend_staging .
        env:
          FRONT_STAGING_NEXT_PUBLIC_PISSYKAKA_API: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_PISSYKAKA_API }}
          FRONT_STAGING_NEXT_PUBLIC_EPDS_API: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_EPDS_API }}
          FRONT_STAGING_NEXT_PUBLIC_DEFAULT_LIMIT: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_DEFAULT_LIMIT }}
          FRONT_STAGING_NEXT_PUBLIC_FRONT_BASEURL: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_FRONT_BASEURL }}
          FRONT_STAGING_NEXT_PUBLIC_PAGINATOR_MAX_ITEMS: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_PAGINATOR_MAX_ITEMS }}
          FRONT_STAGING_NEXT_PUBLIC_CHAN_NAME: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_CHAN_NAME }}
          FRONT_STAGING_NEXT_PUBLIC_FEATURE_FLAG_MODERKA: ${{ vars.FRONT_STAGING_NEXT_PUBLIC_FEATURE_FLAG_MODERKA }}

  restart_builded_image:
    runs-on: self-hosted
    needs: build_docker_image
    steps:
      - name: Stop old container (if exists)
        run: |
          docker stop chan_frontend_staging_container || true
          docker rm chan_frontend_staging_container || true
      - name: Run new container
        run: |
          docker run -d \
            --name chan_frontend_staging_container \
            --restart unless-stopped \
            -p 3030:3000 \
            chan_frontend_staging
