name: BACK Build and deploy Docker image when code pushed to production
run-name: BACK Production deploy triggered by ${{ github.actor }}
on:
  push:
    branches:
      - main
jobs:
  build_docker_image:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Build docker image
        run: | 
          cd packages/backend
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg PISSYKAKA_HOSTNAME=$BACK_PROD_PISSYKAKA_HOSTNAME \
            --build-arg PISSYKAKA_API=$BACK_PROD_PISSYKAKA_API \
            --build-arg DELAY_AFTER_UPDATE_TICK=$BACK_PROD_DELAY_AFTER_UPDATE_TICK \
            --build-arg FETCH_ENTITIES_FROM_API_BASE_LIMIT=$BACK_PROD_FETCH_ENTITIES_FROM_API_BASE_LIMIT \
            --build-arg FETCH_ENTITIES_MAX_PARALLEL_JOBS=$BACK_PROD_FETCH_ENTITIES_MAX_PARALLEL_JOBS \
            --build-arg DATABASE_URL=$BACK_PROD_DATABASE_URL \
            --build-arg DEFAULT_LIMIT=$BACK_PROD_DEFAULT_LIMIT \
            --build-arg DEFAULT_THREAD_SIZE=$BACK_PROD_DEFAULT_THREAD_SIZE \
            --build-arg API_DEFAULT_LISTEN_PORT=$BACK_PROD_API_DEFAULT_LISTEN_PORT \
            --build-arg API_DEFAULT_LISTEN_HOST=$BACK_PROD_API_DEFAULT_LISTEN_HOST \
            --build-arg MODERATION_SECRET_PASS=$BACK_PROD_MODERATION_SECRET_PASS \
            -t chan_backend_production .
        env:
          BACK_PROD_PISSYKAKA_HOSTNAME: ${{ vars.BACK_PROD_PISSYKAKA_HOSTNAME }}
          BACK_PROD_PISSYKAKA_API: ${{ vars.BACK_PROD_PISSYKAKA_API }}
          BACK_PROD_DELAY_AFTER_UPDATE_TICK: ${{ vars.BACK_PROD_DELAY_AFTER_UPDATE_TICK }}
          BACK_PROD_FETCH_ENTITIES_FROM_API_BASE_LIMIT: ${{ vars.BACK_PROD_FETCH_ENTITIES_FROM_API_BASE_LIMIT }}
          BACK_PROD_FETCH_ENTITIES_MAX_PARALLEL_JOBS: ${{ vars.BACK_PROD_FETCH_ENTITIES_MAX_PARALLEL_JOBS }}
          BACK_PROD_DATABASE_URL: ${{ vars.BACK_PROD_DATABASE_URL }}
          BACK_PROD_DEFAULT_LIMIT: ${{ vars.BACK_PROD_DEFAULT_LIMIT }}
          BACK_PROD_DEFAULT_THREAD_SIZE: ${{ vars.BACK_PROD_DEFAULT_THREAD_SIZE }}
          BACK_PROD_API_DEFAULT_LISTEN_PORT: ${{ vars.BACK_PROD_API_DEFAULT_LISTEN_PORT }}
          BACK_PROD_API_DEFAULT_LISTEN_HOST: ${{ vars.BACK_PROD_API_DEFAULT_LISTEN_HOST }}
          BACK_PROD_MODERATION_SECRET_PASS: ${{ vars.BACK_PROD_MODERATION_SECRET_PASS }}

  restart_builded_image:
    runs-on: self-hosted
    needs: build_docker_image
    steps:
      - name: Stop old container (if exists)
        run: |
          docker stop chan_backend_production_container || true
          docker rm chan_backend_production_container || true
      - name: Run new container
        run: |
          docker run -d \
            --name chan_backend_production_container \
            --restart unless-stopped \
            -p 3041:3000 \
            chan_backend_production
