FROM node:20-alpine AS builder

ARG NODE_ENV=production
ENV NODE_ENV=$NODE_ENV

ARG PISSYKAKA_HOSTNAME
ENV PISSYKAKA_HOSTNAME=$PISSYKAKA_HOSTNAME

ARG PISSYKAKA_API
ENV PISSYKAKA_API=$PISSYKAKA_API

ARG DELAY_AFTER_UPDATE_TICK
ENV DELAY_AFTER_UPDATE_TICK=$DELAY_AFTER_UPDATE_TICK

ARG FETCH_ENTITIES_FROM_API_BASE_LIMIT
ENV FETCH_ENTITIES_FROM_API_BASE_LIMIT=$FETCH_ENTITIES_FROM_API_BASE_LIMIT

ARG FETCH_ENTITIES_MAX_PARALLEL_JOBS
ENV FETCH_ENTITIES_MAX_PARALLEL_JOBS=$FETCH_ENTITIES_MAX_PARALLEL_JOBS

ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

ARG DEFAULT_LIMIT
ENV DEFAULT_LIMIT=$DEFAULT_LIMIT

ARG DEFAULT_THREAD_SIZE
ENV DEFAULT_THREAD_SIZE=$DEFAULT_THREAD_SIZE

ARG API_DEFAULT_LISTEN_PORT
ENV API_DEFAULT_LISTEN_PORT=$API_DEFAULT_LISTEN_PORT

ARG API_DEFAULT_LISTEN_HOST
ENV API_DEFAULT_LISTEN_HOST=$API_DEFAULT_LISTEN_HOST

ARG MODERATION_SECRET_PASS
ENV MODERATION_SECRET_PASS=$MODERATION_SECRET_PASS

WORKDIR /app
COPY . .
RUN apk add --no-cache libc6-compat && \
    echo "PISSYKAKA_HOSTNAME=$PISSYKAKA_HOSTNAME" >> .env && \
    echo "PISSYKAKA_API=$PISSYKAKA_API" >> .env && \
    echo "DELAY_AFTER_UPDATE_TICK=$DELAY_AFTER_UPDATE_TICK" >> .env && \
    echo "FETCH_ENTITIES_FROM_API_BASE_LIMIT=$FETCH_ENTITIES_FROM_API_BASE_LIMIT" >> .env && \
    echo "FETCH_ENTITIES_MAX_PARALLEL_JOBS=$FETCH_ENTITIES_MAX_PARALLEL_JOBS" >> .env && \
    echo "DATABASE_URL=$DATABASE_URL" >> .env && \
    echo "DEFAULT_LIMIT=$DEFAULT_LIMIT" >> .env && \
    echo "DEFAULT_THREAD_SIZE=$DEFAULT_THREAD_SIZE" >> .env && \
    echo "API_DEFAULT_LISTEN_PORT=$API_DEFAULT_LISTEN_PORT" >> .env && \
    echo "API_DEFAULT_LISTEN_HOST=$API_DEFAULT_LISTEN_HOST" >> .env && \
    echo "MODERATION_SECRET_PASS=$MODERATION_SECRET_PASS" >> .env && \
    npm install && \
    npm run build && \
    npm ci && \
    npm prune --production

FROM node:20-alpine AS runner
ARG NODE_ENV=production
ENV NODE_ENV=$NODE_ENV
WORKDIR /app
RUN apk add --no-cache libc6-compat
COPY --from=builder /app/migrations ./migrations
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env ./.env
EXPOSE 3000
CMD ["npm", "run", "start-ci"]
